name: Test Release Package (GitHub)

# Configures this workflow to run every time a change a release is created.
on:
  release:
    types: [created]

# Defines custom environment variables for the workflow.
env:
  # Container registry domain
  REGISTRY: ghcr.io
  # Name for the Docker image that this workflow builds.
  # Can be ${{ github.repository }} if we want to use the name of the repository.
  IMAGE_NAME: tony/test-image

# The jobs that the workflow will run.
jobs:

  # Build and push job
  build-and-push-image:
    # Run on the latest available version of Ubuntu.
    runs-on: ubuntu-latest

    # Sets the permissions granted to the GITHUB_TOKEN for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    # Job execution steps
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Uses the docker/login-action action to log in to the Container registry using the account and password that will publish the packages.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extracts tags and labels that will be applied to the specified image.
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Builds the image, based on the Dockerfile. If the build succeeds, it will push the image to GitHub Packages.
      # Uses the tags and labels from the previous step.
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./docker/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Generates an artifact attestation for the image.
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
